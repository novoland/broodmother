<?xml version="1.0" encoding="UTF-8"?>
<!-- HERITRIX 3 CRAWL JOB CONFIGURATION FILE This is a relatively minimal
	configuration suitable for many crawls. Commented-out beans and properties
	are provided as an example; values shown in comments reflect the actual defaults
	which are in effect if not otherwise specified specification. (To change
	from the default behavior, uncomment AND alter the shown values.) -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<context:annotation-config />

	<!-- Handler配置 -->
	<bean id="crawlUrlSink" class="org.hustsse.spider.sink.DefaultCrawlPipelineSink" />

	<bean id="qsbkImgWriter" class="org.hustsse.spider.examples.qsbk.ImgWriter">
        <property name="baseImgDir" value="/home/anderson/qsbk"/>
        <property name="maxImgNum" value="200"/>
        <property name="tumblrImgUrlPattern" value="http://.*tumblr\.com/.*(jpg|png|gif)"/>
        <property name="viaUrlPatterns">
            <list>
                <value>http://www\.qiushibaike\.info/post/\d*</value>
                <value>http://www\.qiushibaike\.info/image/\d*</value>
            </list>
        </property>
	</bean>

	<!-- DNS cache / DNS resolver-->
	<bean id="dnsCache" class="org.hustsse.spider.handler.crawl.dns.DnsCache">
		<constructor-arg value="dnsCache" />
	</bean>
	<bean id="dnsResolver" class="org.hustsse.spider.handler.crawl.dns.DnsResolver" />

	<bean id="nioFetcher" class="org.hustsse.spider.handler.crawl.fetcher.nio.NioFetcher">
        <!--<constructor-arg value="30" />-->
	</bean>
    <bean id="httpBuildPolicy" class="org.hustsse.spider.handler.crawl.fetcher.DefaultHttpRequestBuildPolicy"/>

	<bean id="extractorHttp" class="org.hustsse.spider.handler.crawl.extractor.ExtractorHttp" >
		<property name="candidateHandlerName" value="candidateHandler"/>
	</bean>

	<bean id="extractorHTML" class="org.hustsse.spider.handler.crawl.extractor.ExtractorHTML">
        <property name="extractImg" value="true"/>
    </bean>        

	<bean id="candidateHandler" class="org.hustsse.spider.handler.candidate.CandidateHandler">
		<property name="candidatePipelineBeanId" value="candidatePipeline"/>
	</bean>

	<!-- candidate Pipeline -->
	<bean id="candidatePipeline" class="org.hustsse.spider.core.DefaultPipeline" scope="prototype">
		<constructor-arg>
			<ref bean="candidateSink" />
		</constructor-arg>

		<constructor-arg>
			<list>
				<ref bean="candidateFilter" />
				<ref bean="frontierPreparer" />
			</list>
		</constructor-arg>
	</bean>

	<bean id="candidateSink" class="org.hustsse.spider.sink.DefaultCandidatePipelineSink"/>

    <!-- candidate filter -->
	<bean id="qsbkRule" class="org.hustsse.spider.examples.qsbk.QsbkDecideRule">
        <property name="allowedHost" value="www.qiushibaike.info"/>
        <property name="tumblrImgUrlPattern" value="http://.*tumblr\.com/.*(jpg|png|gif)"/>
    </bean>
	<bean id="ruleSequence" class="org.hustsse.spider.handler.candidate.filter.deciderule.DecideRuleSequence">
		<property name="rules">
			<list>
                <ref bean="qsbkRule"/>
			</list>
		</property>
	</bean>
	<bean id="candidateFilter" class="org.hustsse.spider.handler.candidate.CandidateFilter">
		<property name="rule" ref="ruleSequence"/>
	</bean>

	<!-- frontier preparer -->
	<bean id="frontierPreparer" class="org.hustsse.spider.handler.candidate.preparer.FrontierPreparer">
        <property name="urlPriorityPolicy" ref="urlPriorityPolicy"/>
    </bean>
    <bean id="urlPriorityPolicy" class="org.hustsse.spider.handler.candidate.preparer.policy.priority.RegexUrlPriorityPolicy">
        <!-- img first -->
        <property name="highestPatterns">
            <list>
                <value>http://.*tumblr\.com/.*(jpg|png|gif)</value>
            </list>
        </property>
        <!-- img container page -->
        <property name="highPatterns">
            <list>
                <value>http://www\.qiushibaike\.info/post/\d*</value>
                <value>http://www\.qiushibaike\.info/image/\d*</value>
            </list>
        </property>
    </bean>


	<!-- crawlurl Pipeline -->
	<bean id="crawlPipeline" class="org.hustsse.spider.core.DefaultPipeline" scope="prototype">
		<constructor-arg>
			<ref bean="crawlUrlSink" />
		</constructor-arg>

		<constructor-arg>
			<list>
				<ref bean="dnsResolver"/>
				<ref bean="nioFetcher"/>
				<ref bean="extractorHttp"/>
				<ref bean="extractorHTML"/>
				<ref bean="qsbkImgWriter"/>
				<ref bean="candidateHandler"/>
			</list>
		</constructor-arg>
	</bean>

	<!-- Frontier -->
	<bean class="org.hustsse.spider.core.Frontier" />
	<!-- Url unique filter -->
	<bean class="org.hustsse.spider.uniquefilter.BloomFilterUrlUniqFilter"/>

	<!--<bean class="org.hustsse.spider.workqueue.RedisWorkQueueFactory">-->
		<!--<property name="configFile" value="classpath:redis.properties"/>-->
	<!--</bean>-->

    <bean class="org.hustsse.spider.workqueue.factory.MemWorkQueueFactory">
        <property name="maxLengthPerWorkQueue" value="-1"/>
    </bean>

	<!-- CrawlController配置 -->
	<bean class="org.hustsse.spider.core.CrawlController">
        <property name="crawlPipelineBeanId" value="crawlPipeline"/>
        <property name="seeds">
			<list>
				<value>http://www.qiushibaike.info</value>
			</list>
		</property>
	</bean>

</beans>
